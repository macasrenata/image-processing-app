{"ast":null,"code":"var _jsxFileName = \"/home/macas/Documentos/Github/image-processing-app/frontend/src/app/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport ImageUpload from './components/ImageUpload';\nimport ProcessedImage from './components/ProcessedImage';\nimport OperationsList from './components/OperationsList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Estado para armazenar a imagem enviada e as operações realizadas\n  const [uploadedImage, setUploadedImage] = useState(null);\n  const [appliedOperations, setAppliedOperations] = useState([]);\n\n  // Função para lidar com o upload da imagem\n  const handleImageUpload = data => {\n    setUploadedImage(data); // Define a imagem enviada\n    setAppliedOperations([]); // Limpa as operações aplicadas\n  };\n\n  // Função para lidar com as operações aplicadas na imagem\n  const handleOperationApply = operations => {\n    setAppliedOperations(operations); // Define as operações aplicadas\n  };\n\n  // Função para lidar com o salvamento da imagem\n  const handleImageSave = () => {\n    // Lógica para salvar a imagem no backend\n    console.log('Imagem salva com sucesso!');\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(ImageUpload, {\n              onImageUpload: handleImageUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), uploadedImage && /*#__PURE__*/_jsxDEV(ProcessedImage, {\n              imageData: uploadedImage.data,\n              imageType: uploadedImage.type,\n              appliedOperations: appliedOperations\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this), uploadedImage && /*#__PURE__*/_jsxDEV(OperationsList, {\n              imageId: uploadedImage.id // Passa o ID da imagem\n              ,\n              onProcess: handleOperationApply,\n              onImageSave: handleImageSave\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZSbjvTmCggsQcL22LKSNzblLYOA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","ImageUpload","ProcessedImage","OperationsList","jsxDEV","_jsxDEV","App","_s","uploadedImage","setUploadedImage","appliedOperations","setAppliedOperations","handleImageUpload","data","handleOperationApply","operations","handleImageSave","console","log","children","className","path","element","onImageUpload","fileName","_jsxFileName","lineNumber","columnNumber","imageData","imageType","type","imageId","id","onProcess","onImageSave","_c","$RefreshReg$"],"sources":["/home/macas/Documentos/Github/image-processing-app/frontend/src/app/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport ImageUpload from './components/ImageUpload';\nimport ProcessedImage from './components/ProcessedImage';\nimport OperationsList from './components/OperationsList';\nimport './App.css';\n\nfunction App() {\n  // Estado para armazenar a imagem enviada e as operações realizadas\n  const [uploadedImage, setUploadedImage] = useState(null);\n  const [appliedOperations, setAppliedOperations] = useState([]);\n\n  // Função para lidar com o upload da imagem\n  const handleImageUpload = (data) => {\n    setUploadedImage(data); // Define a imagem enviada\n    setAppliedOperations([]); // Limpa as operações aplicadas\n  };\n\n  // Função para lidar com as operações aplicadas na imagem\n  const handleOperationApply = (operations) => {\n    setAppliedOperations(operations); // Define as operações aplicadas\n  };\n\n  // Função para lidar com o salvamento da imagem\n  const handleImageSave = () => {\n    // Lógica para salvar a imagem no backend\n    console.log('Imagem salva com sucesso!');\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Routes>\n          {/* Rota para a página principal, que inclui upload, imagem e operações */}\n          <Route path=\"/\" element={\n            <div>\n              {/* Componente ImageUpload para fazer o upload da imagem */}\n              <ImageUpload onImageUpload={handleImageUpload} />\n              \n              {/* Componente ProcessedImage para exibir a imagem processada */}\n              {/* {uploadedImage && <ProcessedImage image={uploadedImage} appliedOperations={appliedOperations} />} */}\n\n              {/* Componente ProcessedImage para exibir a imagem processada */}\n              {uploadedImage && <ProcessedImage imageData={uploadedImage.data} imageType={uploadedImage.type} appliedOperations={appliedOperations}/>}\n              \n              {/* Componente OperationsList para aplicar operações na imagem */}\n              {uploadedImage && (\n                <OperationsList\n                  imageId={uploadedImage.id} // Passa o ID da imagem\n                  onProcess={handleOperationApply}\n                  onImageSave={handleImageSave}\n                />\n              )}\n            </div>\n          } />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACc,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;;EAE9D;EACA,MAAMgB,iBAAiB,GAAIC,IAAI,IAAK;IAClCJ,gBAAgB,CAACI,IAAI,CAAC,CAAC,CAAC;IACxBF,oBAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMG,oBAAoB,GAAIC,UAAU,IAAK;IAC3CJ,oBAAoB,CAACI,UAAU,CAAC,CAAC,CAAC;EACpC,CAAC;;EAED;EACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B;IACAC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EAC1C,CAAC;EAED,oBACEb,OAAA,CAACP,MAAM;IAAAqB,QAAA,eACLd,OAAA;MAAKe,SAAS,EAAC,KAAK;MAAAD,QAAA,eAClBd,OAAA,CAACN,MAAM;QAAAoB,QAAA,eAELd,OAAA,CAACL,KAAK;UAACqB,IAAI,EAAC,GAAG;UAACC,OAAO,eACrBjB,OAAA;YAAAc,QAAA,gBAEEd,OAAA,CAACJ,WAAW;cAACsB,aAAa,EAAEX;YAAkB;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EAMhDnB,aAAa,iBAAIH,OAAA,CAACH,cAAc;cAAC0B,SAAS,EAAEpB,aAAa,CAACK,IAAK;cAACgB,SAAS,EAAErB,aAAa,CAACsB,IAAK;cAACpB,iBAAiB,EAAEA;YAAkB;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC,EAGtInB,aAAa,iBACZH,OAAA,CAACF,cAAc;cACb4B,OAAO,EAAEvB,aAAa,CAACwB,EAAG,CAAC;cAAA;cAC3BC,SAAS,EAAEnB,oBAAqB;cAChCoB,WAAW,EAAElB;YAAgB;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9B,CACF;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACpB,EAAA,CApDQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAsDZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}